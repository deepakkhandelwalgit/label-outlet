<?php
// Set arguments for our custom token !order-shipping
function shipping_provider_message_presave($message) {
  if (!empty($message->mid)) {
    return;
  }
  $message->arguments['!order-shipping'] = array(
    'callback' => 'commerce_message_order_shipping',
    'pass message' => TRUE,
  );
}

/**
 * Message callback; Show Order Shipping Service label (!order-shipping).
 *
 * @param $message
 *   The Message entity.
 */
function commerce_message_order_shipping(Message $message) {
  $wrapper = entity_metadata_wrapper('message', $message);
  // Get order id from current commerce message
  $order_id = $wrapper->message_commerce_order->getIdentifier();
  // Get order from order_id
  $order_wrapper = commerce_order_load($order_id);
  // Get the line items. Shipping service is a line item (like product, discount etc)
  $line_items = $order_wrapper->commerce_line_items['und'];

  // Loop through the line items so you find the shipping service
  foreach ($line_items as $delta => $line_item_wrapper) {
    $line_item_id = $line_item_wrapper['line_item_id'];
    $line_item = commerce_line_item_load($line_item_id);
    //dpm($line_item);
    if(isset($line_item->commerce_shipping_service)) {
      // This is want we need, the shipping service label
      $shipping_service = $line_item->line_item_label;
    }
  }

  return $shipping_service;
  
  ?>