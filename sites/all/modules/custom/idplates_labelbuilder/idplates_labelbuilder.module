<?php

define('IDPLATES_LABELBUILDER_SIZES_VOCAB', 'label_size');
define('IDPLATES_LABELBUILDER_LAYOUTS_VOCAB', 'layouts');

/**
 * Implements hook_menu().
 */
function idplates_labelbuilder_menu() {
  $items = array();

  $items['labelbuilder/size'] = array(
    'title' => 'Label Builder',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('idplates_labelbuilder_size_form'),
    'access arguments' => array('access content'),
    'file' => 'includes/idplates_labelbuilder.sizes.inc',
  );

  $items['labelbuilder/layout'] = array(
    'title' => 'Label Builder',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('idplates_labelbuilder_layout_form'),
    'access arguments' => array('access content'),
    'file' => 'includes/idplates_labelbuilder.layouts.inc',
  );

  $items['labelbuilder/customize'] = array(
    'title' => 'Label Builder',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('idplates_labelbuilder_customize_form'),
    'access arguments' => array('access content'),
    'file' => 'includes/idplates_labelbuilder.customize.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function idplates_labelbuilder_theme($existing, $type, $theme, $path) {
  return array(
    'idplates_labelbuilder_preview' => array(
      'template' => 'idplates-labelbuilder-preview',
      'path' => drupal_get_path('module', 'idplates_labelbuilder') . '/templates',
      'arguments' => array(
        'label' => NULL,
      ),
    ),
  );
}


function idplates_labelbuilder_get_label($size, $layout) {
  $query = db_select('field_data_field_label_size', 'b');
  $query->join('field_data_field_layout_options', 'y', 'b.entity_id = y.entity_id');
  $query
    ->condition('b.field_label_size_tid', $size)
    ->condition('y.field_layout_options_target_id', $layout)
    ->fields('b', array('entity_id'));

  $results = $query->execute()->fetchAssoc();

  return $results;
}